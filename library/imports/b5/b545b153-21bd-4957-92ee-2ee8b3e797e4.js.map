{"version":3,"sources":["assets/script/merge/manager/AudioMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// 背景音乐类型\nexport enum MusicType {\n\n}\n\n// 音效类型\nexport enum SoundType {\n    MOVE_COIN = 'moveCoin',\n    PRODUCE_COIN = 'produceCoin',\n    MERGE_COIN = 'mergeCoin',\n    ERROR = 'error',\n\n}\n\n// 震动类型\nexport enum SHAKE_TYPE {\n    HEAVY = 'heavy',\n    MEDIUM = 'medium',\n    LIGHT = 'light',\n    SUPER_HEAVY = '',\n}\n\nexport default class AudioMgr {\n    public static Instance: AudioMgr = new AudioMgr();\n\n    private constructor() {\n    }\n\n    private soundClipCache = {\n\n    };\n    private audioIds = {};\n\n    // 音量\n    private musicVolume: number = null\n    private soundVolume: number = null\n\n    private curBgMusic: any = null;\n    private canPlayMusic: boolean = true;\n    private canPlaySound: boolean = true;//!GameConfig.DEBUG;\n\n    // 当前播放的背景音乐的播放索引\n    private musicId: number = -1;\n\n    init() {\n        cc.log(\"audioMgr init\");\n        this.curBgMusic = null;\n\n        this.musicVolume = 0.2;\n        this.soundVolume = 1.0;\n\n        this.canPlayMusic = true;\n        this.canPlaySound = true;\n    }\n\n    // 音乐\n    public playBGM(music, force) {\n        // 如果已经播放着就不播放了\n        if (this.curBgMusic && this.curBgMusic == music) return;\n\n        this.curBgMusic = music;\n        if (this.canPlayMusic) {\n            this.stopBGM();\n            cc.resources.load(music, function (err, clip) {\n                if (this.curBGMUrl == music) {\n                    cc.audioEngine.stopAll();\n                    this.bgmAudioID = cc.audioEngine.play(clip, true, this.bgmVolume);\n                } else {\n                    console.log(\"播放背景音乐失败:\", err)\n                }\n            }.bind(this));\n        }\n    }\n\n    public stopBGM() {\n        cc.audioEngine.stop(this.musicId);\n    }\n\n    // /**\n    //  * 同步加载声音资源\n    //  * @param url \n    //  */\n    // async preloadAudioClip(soundName: string) {\n    //     if (!this._sfxEnabled) {\n    //         return;\n    //     }\n\n    //     cc.resources.preload(`sounds/${soundName}`, cc.AudioClip)\n    // }\n\n    // 播放音效\n    public playSound(soundType: string, volume: any = this.soundVolume, ext: string = \".mp3\", loop: boolean = false, isFromNet: boolean = false, onStart?: Function) {\n        if (this.canPlaySound) {\n            const url = `sounds/${soundType}`;\n\n            if (this.soundClipCache[`${url}`]) {\n                const audioId = cc.audioEngine.play(this.soundClipCache[`${url}`], loop, volume);\n                onStart && onStart();\n            } else {\n                if (isFromNet) {\n                    if (!url.startsWith(\"https://\")) {\n                        onStart && onStart();\n                        return;\n                    }\n                    cc.assetManager.loadRemote(url, { ext: ext }, (err, clip: cc.AudioClip) => {\n                        if (!err) {\n                            const audioId = cc.audioEngine.play(clip, loop, volume);\n                            this.audioIds[url] = audioId;\n                        } else {\n                            console.error(err);\n                        }\n                        onStart && onStart();\n                    });\n                } else {\n                    cc.resources.load(url, ((err, clip: cc.AudioClip) => {\n                        if (!err) {\n                            const audioId = cc.audioEngine.play(clip, loop, volume);\n                            this.soundClipCache[`${url}`] = clip;\n                            this.audioIds[url] = audioId;\n                        } else {\n                            console.error(err);\n                        }\n                        onStart && onStart();\n                    }));\n                }\n            }\n        } else {\n            onStart && onStart();\n        }\n    }\n    public stopSoundByUrl(url) {\n        let audioId = this.audioIds[url];\n        if (audioId != null) {\n            cc.audioEngine.stop(audioId);\n        }\n    }\n\n    public stopSound(audioId) {\n        console.log(\"audioId\", audioId);\n        if (audioId != null) {\n            cc.audioEngine.stop(audioId);\n        }\n    }\n\n    // 暂停\n    public pauseBGM() {\n        if (this.musicId >= 0) {\n            cc.audioEngine.pause(this.musicId);\n        }\n    }\n\n    // 恢复\n    public resumeBGM() {\n        if (this.musicId >= 0) {\n            cc.audioEngine.resume(this.musicId);\n        }\n    }\n\n    // 卸载音效\n    uncache(url) {\n        const audioUrl: any = cc.url.raw(url);\n        cc.audioEngine.uncache(audioUrl);\n        this.soundClipCache[`${url}`] = undefined;\n    }\n\n    uncacheAll() {\n        cc.audioEngine.uncacheAll();\n        this.soundClipCache = {};\n    }\n\n    pauseAll() {\n        console.log('Pause All Sound');\n        cc.audioEngine.pauseAll();\n    }\n\n    resumeAll() {\n        console.log('Resum All Sound');\n        cc.audioEngine.resumeAll();\n    }\n\n    stopAll() {\n        cc.audioEngine.stopAll();\n    }\n\n    clean() {\n        this.stopAll();\n        this.uncacheAll();\n        this.curBgMusic = '';\n        this.musicId = -1;\n    }\n\n    shake(type: SHAKE_TYPE) {\n        if (!window['wx']) return;\n        if (type === SHAKE_TYPE.SUPER_HEAVY) {\n            wx.vibrateLong();\n        } else {\n            wx.vibrateShort({ type });\n        }\n    }\n}\nexport const audioMgr = AudioMgr.Instance;"]}