{"version":3,"sources":["assets/script/merge/game/GoodsList.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yDAAwD;AACxD,kDAAiD;AACjD,uCAAkC;AAE5B,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAuC,6BAAY;IAAnD;QAAA,qEA4BC;QAzBG,WAAK,GAAa,IAAI,CAAC;QAGvB,YAAM,GAAkB,IAAI,CAAC;;IAsBjC,CAAC;IApBG,0BAAM,GAAN;IAEA,CAAC;IAEK,6BAAS,GAAf;;;;;;wBACI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;wBAC/B,CAAC,GAAG,CAAC;;;6BAAE,CAAA,CAAC,GAAG,yBAAW,CAAC,KAAK,CAAC,MAAM,CAAA;wBAC1B,qBAAM,IAAI,CAAC,YAAY,EAAE,EAAA;;wBAAjC,KAAK,GAAG,SAAyB;wBACvC,KAAK,CAAC,YAAY,CAAC,kBAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACrC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;wBACpC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;wBAC5C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;;;wBALR,CAAC,EAAE,CAAA;;;;;;KAOpD;IAEK,gCAAY,GAAlB;uCAAsB,OAAO;;;;4BACN,qBAAM,qBAAS,CAAC,UAAU,CAAC,uBAAuB,CAAC,EAAA;;wBAAhE,UAAU,GAAG,SAAmD;wBAChE,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;wBACxC,sBAAO,IAAI,EAAC;;;;KACf;IAxBD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;4CACI;IAGvB;QADC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC;6CACK;IANZ,SAAS;QAD7B,OAAO;OACa,SAAS,CA4B7B;IAAD,gBAAC;CA5BD,AA4BC,CA5BsC,EAAE,CAAC,SAAS,GA4BlD;kBA5BoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import { goodsModule } from \"../dataModule/GoodsModule\";\nimport { uimanager } from \"../manager/Uimanager\";\nimport GoodsCom from \"./GoodsCom\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class GoodsList extends cc.Component {\n\n    @property(cc.Label)\n    label: cc.Label = null;\n\n    @property(cc.ScrollView)\n    uPanel: cc.ScrollView = null;\n\n    onLoad() {\n\n    }\n\n    async initGoods() {\n        this.uPanel.content.removeAllChildren();\n        for (let i = 0; i < goodsModule.goods.length; i++) {\n            const goods = await this.produceGoods();\n            goods.getComponent(GoodsCom).init(i);\n            this.uPanel.content.addChild(goods);\n            goods.x = i * goods.width + goods.width / 2;\n            this.uPanel.content.width = (i + 1) * goods.width;\n        }\n    }\n\n    async produceGoods(): Promise<cc.Node> {\n        const coinPrefab = await uimanager.loadPrefab('prefab/merge/goodsCom');\n        const coin = cc.instantiate(coinPrefab);\n        return coin;\n    }\n}\n"]}