{"version":3,"sources":["assets/script/merge/dataModule/ZyxGameModule.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,mDAA+E;AAC/E,6CAAwC;AACxC,2CAAsC;AAEtC;IAA2C,iCAAU;IAQjD;QAAA,YACI,iBAAO,SACV;QARD,aAAa;QACb,cAAQ,GAAiB,IAAI,CAAC;QAE9B,aAAa;QACb,cAAQ,GAAU,EAAE,CAAC;;IAIrB,CAAC;IAED,iCAAS,GAAT,UAAU,IAAS;QACf,iBAAM,SAAS,YAAC,IAAI,CAAC,CAAC;QAEtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;IACxC,CAAC;IAED,+BAAO,GAAP;QAEI,wBAAwB;QACxB,IAAM,GAAG,GAAG,EAAE,CAAC;QACf,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,GAAG;YACC,QAAQ;YACR,IAAM,MAAM,GAAG,kBAAQ,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjD,IAAI,MAAM,KAAK,CAAC,EAAE;gBACd,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;aACpB;iBAAM;gBACH,oBAAoB;gBACpB,IAAM,QAAQ,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;gBAChC,IAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,UAAA,CAAC;oBAC1B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,4BAAe,CAAC,KAAK,CAAC;gBAC/C,CAAC,CAAC,CAAA;gBACF,IAAI,QAAQ,IAAI,MAAM,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;wBAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;qBACpB;oBACD,MAAM;iBACT;gBAED,IAAI,QAAQ,IAAI,MAAM,EAAE;oBACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC7B,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;qBACzB;iBACJ;aACJ;SAEJ,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;QAEzB,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;QAC5B,OAAO,GAAG,CAAC;IACf,CAAC;IACL,oBAAC;AAAD,CAtDA,AAsDC,CAtD0C,oBAAU,GAsDpD;;AACY,QAAA,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["import { gridContentType, gridSize, typeGameInfo } from '../define/TypeDefine';\nimport NewUtils from '../util/NewUtils';\nimport DataModule from './DataModule';\n\nexport default class ZyxGameModule extends DataModule {\n\n    // 游戏进行中的资源数据\n    gameInfo: typeGameInfo = null;\n\n    // 游戏进行中的棋盘数据\n    gridInfo: any[] = [];\n\n    constructor() {\n        super();\n    }\n\n    parseData(data: any): void {\n        super.parseData(data);\n\n        this.gameInfo = data.gameInfo;\n        this.gridInfo = data.gridInfo || [];\n    }\n\n    produce(): number[][] {\n\n        // 确定要生成的数字组合 nMax <= 7;\n        const arr = [];\n        let condition = false;\n        do {\n            // 生成新格子\n            const newNum = NewUtils.randomIntInclusive(0, 4);\n            if (newNum === 0) {\n                arr.push([0, 1]);\n            } else {\n                // 判断剩余空间是否仍然没有空格子区域\n                const surSpace = 8 - arr.length;\n                const emptyGrid = arr.filter(x => {\n                    return x && x[1] === gridContentType.EMPTY;\n                })\n                if (surSpace <= newNum && emptyGrid.length === 0) {\n                    for (let i = 0; i < surSpace; i++) {\n                        arr.push([0, 1]);\n                    }\n                    break;\n                }\n\n                if (surSpace >= newNum) {\n                    for (let i = 0; i < newNum; i++) {\n                        arr.push([newNum, 1]);\n                    }\n                }\n            }\n\n        } while (arr.length < 8);\n\n        console.log('produce', arr);\n        return arr;\n    }\n}\nexport const zyxGameModule = new ZyxGameModule();\n"]}